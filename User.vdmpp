class User
types
-- TODO Define types here
values
-- TODO Define values here
instance variables
	-- network of contacts of this user
	public connections: set of User := {};
	public name: seq of char;
	
operations
	-- constructor
	public User: seq of char ==> User
	User(n) == (name := n; return self)
	post connections = {} and name = n;
	
	--add a new connection on this user
	public addConnection: User ==> ()
	addConnection(c) == connections := connections union {c}
	pre c <> self and c not in set connections
	post connections = connections~ union {c};
	
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end User